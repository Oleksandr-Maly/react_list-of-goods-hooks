{"version":3,"sources":["types/SortType.ts","data/goodsFromServer.js","utils/getReorderedGoods.tsx","Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","GoodsList","isReversed","sortType","goodsList","goods","sort","goodsItemA","goodsItemB","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","map","goodsItem","App","useState","setIsReversed","NONE","setSortType","resetIsVisible","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,4DCACC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,iBDVUD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KEEL,I,OCQME,EAA6B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACjDC,EDTyB,SAC/BC,EACAH,EACAC,GAEA,IAAMC,EAAS,YAAOC,GAkBtB,OAhBAD,EAAUE,MAAK,SAACC,EAAYC,GAC1B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAWG,cAAcF,GAElC,KAAKT,EAASY,OACZ,OAAOJ,EAAWK,OAASJ,EAAWI,OACxC,QACE,OAAO,MAITV,GACFE,EAAUS,UAGLT,ECdWU,CAAkBd,EAAiBE,EAAYC,GAEjE,OACE,6BACE,6BACGC,EAAUW,KAAI,SAAAC,GAAS,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,YCVjBC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOhB,EAAP,KAAmBiB,EAAnB,KACA,EAAgCD,mBAASnB,EAASqB,MAAlD,mBAAOjB,EAAP,KAAiBkB,EAAjB,KACMC,EAAiBpB,GAAcC,IAAaJ,EAASqB,KAE3D,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaJ,EAASU,WAEtCiB,QAAS,kBAAOL,EAAYtB,EAASU,WANvC,iCAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaJ,EAASY,SAEtCe,QAAS,kBAAOL,EAAYtB,EAASY,SANvC,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAavB,IAEjBwB,QAAS,kBAAMP,GAAejB,IANhC,qBAWEoB,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPP,GAAc,GACdE,EAAYtB,EAASqB,OALzB,sBAaJ,cAAC,EAAD,CAAWlB,WAAYA,EAAYC,SAAUA,QC3DnDwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.77346294.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { SortType } from '../types/SortType';\n\nexport const getReorderedGoods = (\n  goods: string[],\n  isReversed: boolean,\n  sortType: SortType,\n) => {\n  const goodsList = [...goods];\n\n  goodsList.sort((goodsItemA, goodsItemB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodsItemA.localeCompare(goodsItemB);\n\n      case SortType.LENGTH:\n        return goodsItemA.length - goodsItemB.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goodsList.reverse();\n  }\n\n  return goodsList;\n};\n","import React from 'react';\nimport { goodsFromServer } from '../../data/goodsFromServer';\nimport { SortType } from '../../types/SortType';\nimport { getReorderedGoods } from '../../utils/getReorderedGoods';\n\ntype Props = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport const GoodsList: React.FC<Props> = ({ isReversed, sortType }) => {\n  const goodsList = getReorderedGoods(goodsFromServer, isReversed, sortType);\n\n  return (\n    <ul>\n      <ul>\n        {goodsList.map(goodsItem => (\n          <li data-cy=\"Good\">{goodsItem}</li>\n        ))}\n      </ul>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './Components/GoodsList';\nimport { SortType } from './types/SortType';\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const resetIsVisible = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => (setSortType(SortType.ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => (setSortType(SortType.LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(resetIsVisible) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList isReversed={isReversed} sortType={sortType} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}