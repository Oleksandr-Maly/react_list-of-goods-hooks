{"version":3,"sources":["types/SortType.ts","data/goodsFromServer.js","utils/getReorderedGoods.tsx","components/GoodsList/GoodsList.tsx","components/Buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","GoodsList","isReversed","sortType","goodsList","goods","sort","goodsItemA","goodsItemB","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","map","goodsItem","Buttons","setSortType","setIsReversed","resetIsVisible","NONE","className","type","classNames","onClick","App","useState","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,8BCACC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,iBDVUD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KEEL,I,OCQME,EAA6B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACjDC,EDTyB,SAC/BC,EACAH,EACAC,GAEA,IAAMC,EAAS,YAAOC,GAkBtB,OAhBAD,EAAUE,MAAK,SAACC,EAAYC,GAC1B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAWG,cAAcF,GAElC,KAAKT,EAASY,OACZ,OAAOJ,EAAWK,OAASJ,EAAWI,OACxC,QACE,OAAO,MAITV,GACFE,EAAUS,UAGLT,ECdWU,CAAkBd,EAAiBE,EAAYC,GAEjE,OACE,6BACE,6BACGC,EAAUW,KAAI,SAAAC,GAAS,OACtB,oBAAI,UAAQ,OAAZ,SAAoCA,GAAZA,W,gBCHrBC,EAA2B,SAAC,GAKlC,IAJLd,EAII,EAJJA,SACAD,EAGI,EAHJA,WACAgB,EAEI,EAFJA,YACAC,EACI,EADJA,cAEMC,EAAiBlB,GAAcC,IAAaJ,EAASsB,KAE3D,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYrB,IAAaJ,EAASU,WAEtCgB,QAAS,kBAAOP,EAAYnB,EAASU,WANvC,iCAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaJ,EAASY,SAEtCc,QAAS,kBAAOP,EAAYnB,EAASY,SANvC,4BAWA,wBACEY,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAAS,kBAAMN,GAAejB,IANhC,qBAWEkB,GACA,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPN,GAAc,GACdD,EAAYnB,EAASsB,OALzB,uBCnDKK,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOzB,EAAP,KAAmBiB,EAAnB,KACA,EAAgCQ,mBAAS5B,EAASsB,MAAlD,mBAAOlB,EAAP,KAAiBe,EAAjB,KAEA,OACE,sBAAKI,UAAU,kBAAf,UAEE,cAAC,EAAD,CACEnB,SAAUA,EACVD,WAAYA,EACZgB,YAAaA,EACbC,cAAeA,IAGjB,cAAC,EAAD,CAAWjB,WAAYA,EAAYC,SAAUA,QClBnDyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1075a215.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { SortType } from '../types/SortType';\n\nexport const getReorderedGoods = (\n  goods: string[],\n  isReversed: boolean,\n  sortType: SortType,\n) => {\n  const goodsList = [...goods];\n\n  goodsList.sort((goodsItemA, goodsItemB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodsItemA.localeCompare(goodsItemB);\n\n      case SortType.LENGTH:\n        return goodsItemA.length - goodsItemB.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goodsList.reverse();\n  }\n\n  return goodsList;\n};\n","import React from 'react';\nimport { goodsFromServer } from '../../data/goodsFromServer';\nimport { SortType } from '../../types/SortType';\nimport { getReorderedGoods } from '../../utils/getReorderedGoods';\n\ntype Props = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport const GoodsList: React.FC<Props> = ({ isReversed, sortType }) => {\n  const goodsList = getReorderedGoods(goodsFromServer, isReversed, sortType);\n\n  return (\n    <ul>\n      <ul>\n        {goodsList.map(goodsItem => (\n          <li data-cy=\"Good\" key={goodsItem}>{goodsItem}</li>\n        ))}\n      </ul>\n    </ul>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { SortType } from '../../types/SortType';\n\ntype SetSortType = ((a:SortType) => void);\ntype IsReversed = ((a:boolean) => void);\n\ntype Props = {\n  sortType: SortType,\n  isReversed: boolean,\n  setSortType: SetSortType,\n  setIsReversed: IsReversed,\n};\n\nexport const Buttons: React.FC<Props> = ({\n  sortType,\n  isReversed,\n  setSortType,\n  setIsReversed,\n}) => {\n  const resetIsVisible = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className={classNames(\n          'button is-info',\n          { 'is-light': sortType !== SortType.ALPHABET },\n        )}\n        onClick={() => (setSortType(SortType.ALPHABET))}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'button is-success',\n          { 'is-light': sortType !== SortType.LENGTH },\n        )}\n        onClick={() => (setSortType(SortType.LENGTH))}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'button is-warning',\n          { 'is-light': !isReversed },\n        )}\n        onClick={() => setIsReversed(!isReversed)}\n      >\n        Reverse\n      </button>\n\n      {(resetIsVisible) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setIsReversed(false);\n            setSortType(SortType.NONE);\n          }}\n        >\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { SortType } from './types/SortType';\nimport { Buttons } from './components/Buttons';\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n\n      <Buttons\n        sortType={sortType}\n        isReversed={isReversed}\n        setSortType={setSortType}\n        setIsReversed={setIsReversed}\n      />\n\n      <GoodsList isReversed={isReversed} sortType={sortType} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}